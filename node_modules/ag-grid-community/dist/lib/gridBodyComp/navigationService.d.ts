import { CellPosition } from "../entities/cellPosition";
import { BeanStub } from "../context/beanStub";
import { CtrlsService } from "../ctrlsService";
import { CellCtrl } from "../rendering/cell/cellCtrl";
import { RowCtrl } from "../rendering/row/rowCtrl";
import { RowRenderer } from "../rendering/rowRenderer";
import { HeaderNavigationService } from "../headerRendering/header/headerNavigationService";
export declare class NavigationService extends BeanStub {
    private mouseEventService;
    private paginationProxy;
    private focusService;
    private animationFrameService;
    private rangeService;
    private columnModel;
    ctrlsService: CtrlsService;
    rowRenderer: RowRenderer;
    headerNavigationService: HeaderNavigationService;
    private rowPositionUtils;
    private cellNavigationService;
    private pinnedRowModel;
    private gridBodyCon;
    private timeLastPageEventProcessed;
    private postConstruct;
    handlePageScrollingKey(event: KeyboardEvent): boolean;
    private isTimeSinceLastPageEventToRecent;
    private setTimeLastPageEventProcessed;
    private navigateTo;
    private onPageDown;
    private onPageUp;
    private getIndexToFocus;
    private onCtrlUpOrDown;
    private onCtrlLeftOrRight;
    private onHomeOrEndKey;
    onTabKeyDown(previous: CellCtrl | RowCtrl, keyboardEvent: KeyboardEvent): void;
    tabToNextCell(backwards: boolean): boolean;
    private tabToNextCellCommon;
    private moveToNextEditingCell;
    private moveToNextEditingRow;
    private moveToNextCellNotEditing;
    private findNextCellToFocusOn;
    private isCellEditable;
    getCellByPosition(cellPosition: CellPosition): CellCtrl | null;
    private lookupRowNodeForCell;
    navigateToNextCell(event: KeyboardEvent | null, key: number, currentCell: CellPosition, allowUserOverride: boolean): void;
    private getNormalisedPosition;
    private tryToFocusFullWidthRow;
    private focusPosition;
    private isValidNavigateCell;
    private getLastCellOfColSpan;
    ensureCellVisible(gridCell: CellPosition): void;
}
